---
swagger: "2.0"
info:
  description: "Manage Access Control Policies."
  version: "3.1.1-SNAPSHOT"
  title: "Access Control Policies"
host: "api.im.actiandatacloud.com"
schemes:
- "https"
paths:
  /access/policies:
    get:
      summary: "Retrieve a list of access policies. Rules for each policy will be\
        \ included, but will eventually be deprecated so that rules must be requested\
        \ separately. Account Admin role required."
      description: ""
      operationId: "getAccessPolicies"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Page number (zero based)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Page size"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort by column name"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort direction (asc or desc)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Filter (access policy name)"
        required: false
        schema:
          type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer [access_token]"
        required: true
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/AccessPolicyListReponse"
        401:
          description: "unauthorized"
    post:
      summary: "Create a new access policy. Account Admin role required."
      description: ""
      operationId: "createAccessPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "AccessPolicyRequest"
        required: true
        schema:
          $ref: "#/definitions/AccessPolicyRequest"
      - name: "Authorization"
        in: "header"
        description: "Bearer [access_token]"
        required: true
      responses:
        200:
          description: "created"
          schema:
            $ref: "#/definitions/AccessPolicyResponse"
        201:
          description: "created"
          schema:
            $ref: "#/definitions/AccessPolicyResponse"
        401:
          description: "unauthorized"
  /access/policies/{id}:
    get:
      summary: "Retrieve an existing access policy, including all it's policy rules.\
        \ This will eventually be deprecated, so rules should be requested separately.\
        \ Account Admin role required."
      description: ""
      operationId: "getAccessPolicy"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Access policy id"
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer [access_token]"
        required: true
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/AccessPolicyResponse"
        401:
          description: "unauthorized"
        404:
          description: "not found"
    put:
      summary: "Update an existing access policy. Account Admin role required."
      description: ""
      operationId: "updateAccessPolicy"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Access policy id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "AccessPolicyRequest"
        required: true
        schema:
          $ref: "#/definitions/AccessPolicyRequest"
      - name: "Authorization"
        in: "header"
        description: "Bearer [access_token]"
        required: true
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/AccessPolicyResponse"
        401:
          description: "unauthorized"
        404:
          description: "not found"
    delete:
      summary: "Delete an existing access policy. Account Admin role required."
      description: ""
      operationId: "deleteAccessPolicy"
      parameters:
      - name: "id"
        in: "path"
        description: "Access policy id"
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer [access_token]"
        required: true
      responses:
        200:
          description: "deleted"
          schema:
            $ref: "#/definitions/ResponseEntityObject"
        204:
          description: "deleted"
        401:
          description: "unauthorized"
        404:
          description: "not found"
  /users/access/policies:
    get:
      summary: "Retrieve a list of access policies for all users in the current account.\
        \ Account Admin role required."
      description: ""
      operationId: "getAllUserAccessPolicies"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Page number (zero based)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Page size"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort by column name"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort direction (asc or desc)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Filter (user name)"
        required: false
        schema:
          type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer [access_token]"
        required: true
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/AccessPolicyListReponse"
        401:
          description: "unauthorized"
  /users/{userId}/access/policies:
    get:
      summary: "Retrieve a list of access policies currently assigned to a user. Account\
        \ Admin role required."
      description: ""
      operationId: "getUserAccessPolicies"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "User id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Page number (zero based)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Page size"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort by column name"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort direction (asc or desc)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Filter (user name)"
        required: false
        schema:
          type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer [access_token]"
        required: true
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/AccessPolicyListReponse"
        401:
          description: "unauthorized"
    post:
      summary: "Assign (one or more) access control policies to a user. Account Admin\
        \ role required."
      description: ""
      operationId: "setUserAccessPolicies"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "UserAccessPolicyRequest"
        required: true
        schema:
          $ref: "#/definitions/UserAccessPolicyRequest"
      - name: "userId"
        in: "path"
        description: "User id"
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer [access_token]"
        required: true
      responses:
        200:
          description: "created"
          schema:
            $ref: "#/definitions/UserAccessPolicyResponse"
        201:
          description: "created"
          schema:
            $ref: "#/definitions/UserAccessPolicyResponse"
        401:
          description: "unauthorized"
  /users/{userId}/access/policies/{accessPolicyId}:
    put:
      summary: "Assign an access policy to a user. Account Admin role required."
      description: ""
      operationId: "putUserAccessPolicy"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "User id"
        required: true
        type: "string"
      - name: "accessPolicyId"
        in: "path"
        description: "Access Policy id"
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer [access_token]"
        required: true
      responses:
        200:
          description: "created"
          schema:
            $ref: "#/definitions/UserAccessPolicyResponse"
        201:
          description: "created"
          schema:
            $ref: "#/definitions/UserAccessPolicyResponse"
        401:
          description: "unauthorized"
    delete:
      summary: "Revoke an access policy currently assigned to a user. Account Admin\
        \ role required."
      description: ""
      operationId: "deleteUserAccessPolicy"
      parameters:
      - name: "userId"
        in: "path"
        description: "User id"
        required: true
        type: "string"
      - name: "accessPolicyId"
        in: "path"
        description: "Access Policy id"
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer [access_token]"
        required: true
      responses:
        200:
          description: "deleted"
          schema:
            $ref: "#/definitions/ResponseEntityObject"
        204:
          description: "deleted"
        401:
          description: "unauthorized"
        404:
          description: "not found"
definitions:
  AccessPolicyListReponse:
    type: "object"
    properties:
      totalRecords:
        type: "integer"
        format: "int64"
      totalPages:
        type: "integer"
        format: "int32"
      size:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      sortBy:
        type: "string"
      direction:
        type: "string"
      filter:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/AccessPolicyResponse"
  AccessPolicyRequest:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      permissions:
        type: "array"
        items:
          $ref: "#/definitions/Permission"
  AccessPolicyResponse:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      href:
        type: "string"
      description:
        type: "string"
      global:
        type: "boolean"
      account:
        $ref: "#/definitions/AccountReference"
      permissions:
        type: "array"
        items:
          $ref: "#/definitions/Permission"
      created:
        type: "string"
        format: "date-time"
      createdByUser:
        $ref: "#/definitions/Reference"
      lastModified:
        type: "string"
        format: "date-time"
      lastModifiedByUser:
        $ref: "#/definitions/Reference"
  AccountReference:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      href:
        type: "string"
      customerId:
        type: "string"
  Permission:
    type: "object"
    properties:
      resourceType:
        type: "string"
      allowed:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      resourceIds:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
  Reference:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      href:
        type: "string"
  ResponseEntity:
    type: "object"
    properties:
      headers:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      body:
        type: "object"
      statusCode:
        type: "string"
        enum:
        - "CONTINUE"
        - "SWITCHING_PROTOCOLS"
        - "PROCESSING"
        - "CHECKPOINT"
        - "OK"
        - "CREATED"
        - "ACCEPTED"
        - "NON_AUTHORITATIVE_INFORMATION"
        - "NO_CONTENT"
        - "RESET_CONTENT"
        - "PARTIAL_CONTENT"
        - "MULTI_STATUS"
        - "ALREADY_REPORTED"
        - "IM_USED"
        - "MULTIPLE_CHOICES"
        - "MOVED_PERMANENTLY"
        - "FOUND"
        - "MOVED_TEMPORARILY"
        - "SEE_OTHER"
        - "NOT_MODIFIED"
        - "USE_PROXY"
        - "TEMPORARY_REDIRECT"
        - "PERMANENT_REDIRECT"
        - "BAD_REQUEST"
        - "UNAUTHORIZED"
        - "PAYMENT_REQUIRED"
        - "FORBIDDEN"
        - "NOT_FOUND"
        - "METHOD_NOT_ALLOWED"
        - "NOT_ACCEPTABLE"
        - "PROXY_AUTHENTICATION_REQUIRED"
        - "REQUEST_TIMEOUT"
        - "CONFLICT"
        - "GONE"
        - "LENGTH_REQUIRED"
        - "PRECONDITION_FAILED"
        - "PAYLOAD_TOO_LARGE"
        - "REQUEST_ENTITY_TOO_LARGE"
        - "URI_TOO_LONG"
        - "REQUEST_URI_TOO_LONG"
        - "UNSUPPORTED_MEDIA_TYPE"
        - "REQUESTED_RANGE_NOT_SATISFIABLE"
        - "EXPECTATION_FAILED"
        - "I_AM_A_TEAPOT"
        - "INSUFFICIENT_SPACE_ON_RESOURCE"
        - "METHOD_FAILURE"
        - "DESTINATION_LOCKED"
        - "UNPROCESSABLE_ENTITY"
        - "LOCKED"
        - "FAILED_DEPENDENCY"
        - "UPGRADE_REQUIRED"
        - "PRECONDITION_REQUIRED"
        - "TOO_MANY_REQUESTS"
        - "REQUEST_HEADER_FIELDS_TOO_LARGE"
        - "UNAVAILABLE_FOR_LEGAL_REASONS"
        - "INTERNAL_SERVER_ERROR"
        - "NOT_IMPLEMENTED"
        - "BAD_GATEWAY"
        - "SERVICE_UNAVAILABLE"
        - "GATEWAY_TIMEOUT"
        - "HTTP_VERSION_NOT_SUPPORTED"
        - "VARIANT_ALSO_NEGOTIATES"
        - "INSUFFICIENT_STORAGE"
        - "LOOP_DETECTED"
        - "BANDWIDTH_LIMIT_EXCEEDED"
        - "NOT_EXTENDED"
        - "NETWORK_AUTHENTICATION_REQUIRED"
      statusCodeValue:
        type: "integer"
        format: "int32"
  ResponseEntityAccessPolicyListReponse:
    type: "object"
    properties:
      headers:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      body:
        $ref: "#/definitions/AccessPolicyListReponse"
      statusCode:
        type: "string"
        enum:
        - "CONTINUE"
        - "SWITCHING_PROTOCOLS"
        - "PROCESSING"
        - "CHECKPOINT"
        - "OK"
        - "CREATED"
        - "ACCEPTED"
        - "NON_AUTHORITATIVE_INFORMATION"
        - "NO_CONTENT"
        - "RESET_CONTENT"
        - "PARTIAL_CONTENT"
        - "MULTI_STATUS"
        - "ALREADY_REPORTED"
        - "IM_USED"
        - "MULTIPLE_CHOICES"
        - "MOVED_PERMANENTLY"
        - "FOUND"
        - "MOVED_TEMPORARILY"
        - "SEE_OTHER"
        - "NOT_MODIFIED"
        - "USE_PROXY"
        - "TEMPORARY_REDIRECT"
        - "PERMANENT_REDIRECT"
        - "BAD_REQUEST"
        - "UNAUTHORIZED"
        - "PAYMENT_REQUIRED"
        - "FORBIDDEN"
        - "NOT_FOUND"
        - "METHOD_NOT_ALLOWED"
        - "NOT_ACCEPTABLE"
        - "PROXY_AUTHENTICATION_REQUIRED"
        - "REQUEST_TIMEOUT"
        - "CONFLICT"
        - "GONE"
        - "LENGTH_REQUIRED"
        - "PRECONDITION_FAILED"
        - "PAYLOAD_TOO_LARGE"
        - "REQUEST_ENTITY_TOO_LARGE"
        - "URI_TOO_LONG"
        - "REQUEST_URI_TOO_LONG"
        - "UNSUPPORTED_MEDIA_TYPE"
        - "REQUESTED_RANGE_NOT_SATISFIABLE"
        - "EXPECTATION_FAILED"
        - "I_AM_A_TEAPOT"
        - "INSUFFICIENT_SPACE_ON_RESOURCE"
        - "METHOD_FAILURE"
        - "DESTINATION_LOCKED"
        - "UNPROCESSABLE_ENTITY"
        - "LOCKED"
        - "FAILED_DEPENDENCY"
        - "UPGRADE_REQUIRED"
        - "PRECONDITION_REQUIRED"
        - "TOO_MANY_REQUESTS"
        - "REQUEST_HEADER_FIELDS_TOO_LARGE"
        - "UNAVAILABLE_FOR_LEGAL_REASONS"
        - "INTERNAL_SERVER_ERROR"
        - "NOT_IMPLEMENTED"
        - "BAD_GATEWAY"
        - "SERVICE_UNAVAILABLE"
        - "GATEWAY_TIMEOUT"
        - "HTTP_VERSION_NOT_SUPPORTED"
        - "VARIANT_ALSO_NEGOTIATES"
        - "INSUFFICIENT_STORAGE"
        - "LOOP_DETECTED"
        - "BANDWIDTH_LIMIT_EXCEEDED"
        - "NOT_EXTENDED"
        - "NETWORK_AUTHENTICATION_REQUIRED"
      statusCodeValue:
        type: "integer"
        format: "int32"
  ResponseEntityAccessPolicyResponse:
    type: "object"
    properties:
      headers:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      body:
        $ref: "#/definitions/AccessPolicyResponse"
      statusCode:
        type: "string"
        enum:
        - "CONTINUE"
        - "SWITCHING_PROTOCOLS"
        - "PROCESSING"
        - "CHECKPOINT"
        - "OK"
        - "CREATED"
        - "ACCEPTED"
        - "NON_AUTHORITATIVE_INFORMATION"
        - "NO_CONTENT"
        - "RESET_CONTENT"
        - "PARTIAL_CONTENT"
        - "MULTI_STATUS"
        - "ALREADY_REPORTED"
        - "IM_USED"
        - "MULTIPLE_CHOICES"
        - "MOVED_PERMANENTLY"
        - "FOUND"
        - "MOVED_TEMPORARILY"
        - "SEE_OTHER"
        - "NOT_MODIFIED"
        - "USE_PROXY"
        - "TEMPORARY_REDIRECT"
        - "PERMANENT_REDIRECT"
        - "BAD_REQUEST"
        - "UNAUTHORIZED"
        - "PAYMENT_REQUIRED"
        - "FORBIDDEN"
        - "NOT_FOUND"
        - "METHOD_NOT_ALLOWED"
        - "NOT_ACCEPTABLE"
        - "PROXY_AUTHENTICATION_REQUIRED"
        - "REQUEST_TIMEOUT"
        - "CONFLICT"
        - "GONE"
        - "LENGTH_REQUIRED"
        - "PRECONDITION_FAILED"
        - "PAYLOAD_TOO_LARGE"
        - "REQUEST_ENTITY_TOO_LARGE"
        - "URI_TOO_LONG"
        - "REQUEST_URI_TOO_LONG"
        - "UNSUPPORTED_MEDIA_TYPE"
        - "REQUESTED_RANGE_NOT_SATISFIABLE"
        - "EXPECTATION_FAILED"
        - "I_AM_A_TEAPOT"
        - "INSUFFICIENT_SPACE_ON_RESOURCE"
        - "METHOD_FAILURE"
        - "DESTINATION_LOCKED"
        - "UNPROCESSABLE_ENTITY"
        - "LOCKED"
        - "FAILED_DEPENDENCY"
        - "UPGRADE_REQUIRED"
        - "PRECONDITION_REQUIRED"
        - "TOO_MANY_REQUESTS"
        - "REQUEST_HEADER_FIELDS_TOO_LARGE"
        - "UNAVAILABLE_FOR_LEGAL_REASONS"
        - "INTERNAL_SERVER_ERROR"
        - "NOT_IMPLEMENTED"
        - "BAD_GATEWAY"
        - "SERVICE_UNAVAILABLE"
        - "GATEWAY_TIMEOUT"
        - "HTTP_VERSION_NOT_SUPPORTED"
        - "VARIANT_ALSO_NEGOTIATES"
        - "INSUFFICIENT_STORAGE"
        - "LOOP_DETECTED"
        - "BANDWIDTH_LIMIT_EXCEEDED"
        - "NOT_EXTENDED"
        - "NETWORK_AUTHENTICATION_REQUIRED"
      statusCodeValue:
        type: "integer"
        format: "int32"
  ResponseEntityObject:
    type: "object"
    properties:
      headers:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      body:
        type: "object"
      statusCode:
        type: "string"
        enum:
        - "CONTINUE"
        - "SWITCHING_PROTOCOLS"
        - "PROCESSING"
        - "CHECKPOINT"
        - "OK"
        - "CREATED"
        - "ACCEPTED"
        - "NON_AUTHORITATIVE_INFORMATION"
        - "NO_CONTENT"
        - "RESET_CONTENT"
        - "PARTIAL_CONTENT"
        - "MULTI_STATUS"
        - "ALREADY_REPORTED"
        - "IM_USED"
        - "MULTIPLE_CHOICES"
        - "MOVED_PERMANENTLY"
        - "FOUND"
        - "MOVED_TEMPORARILY"
        - "SEE_OTHER"
        - "NOT_MODIFIED"
        - "USE_PROXY"
        - "TEMPORARY_REDIRECT"
        - "PERMANENT_REDIRECT"
        - "BAD_REQUEST"
        - "UNAUTHORIZED"
        - "PAYMENT_REQUIRED"
        - "FORBIDDEN"
        - "NOT_FOUND"
        - "METHOD_NOT_ALLOWED"
        - "NOT_ACCEPTABLE"
        - "PROXY_AUTHENTICATION_REQUIRED"
        - "REQUEST_TIMEOUT"
        - "CONFLICT"
        - "GONE"
        - "LENGTH_REQUIRED"
        - "PRECONDITION_FAILED"
        - "PAYLOAD_TOO_LARGE"
        - "REQUEST_ENTITY_TOO_LARGE"
        - "URI_TOO_LONG"
        - "REQUEST_URI_TOO_LONG"
        - "UNSUPPORTED_MEDIA_TYPE"
        - "REQUESTED_RANGE_NOT_SATISFIABLE"
        - "EXPECTATION_FAILED"
        - "I_AM_A_TEAPOT"
        - "INSUFFICIENT_SPACE_ON_RESOURCE"
        - "METHOD_FAILURE"
        - "DESTINATION_LOCKED"
        - "UNPROCESSABLE_ENTITY"
        - "LOCKED"
        - "FAILED_DEPENDENCY"
        - "UPGRADE_REQUIRED"
        - "PRECONDITION_REQUIRED"
        - "TOO_MANY_REQUESTS"
        - "REQUEST_HEADER_FIELDS_TOO_LARGE"
        - "UNAVAILABLE_FOR_LEGAL_REASONS"
        - "INTERNAL_SERVER_ERROR"
        - "NOT_IMPLEMENTED"
        - "BAD_GATEWAY"
        - "SERVICE_UNAVAILABLE"
        - "GATEWAY_TIMEOUT"
        - "HTTP_VERSION_NOT_SUPPORTED"
        - "VARIANT_ALSO_NEGOTIATES"
        - "INSUFFICIENT_STORAGE"
        - "LOOP_DETECTED"
        - "BANDWIDTH_LIMIT_EXCEEDED"
        - "NOT_EXTENDED"
        - "NETWORK_AUTHENTICATION_REQUIRED"
      statusCodeValue:
        type: "integer"
        format: "int32"
  ResponseEntityUserAccessPolicyListResponse:
    type: "object"
    properties:
      headers:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      body:
        $ref: "#/definitions/UserAccessPolicyListResponse"
      statusCode:
        type: "string"
        enum:
        - "CONTINUE"
        - "SWITCHING_PROTOCOLS"
        - "PROCESSING"
        - "CHECKPOINT"
        - "OK"
        - "CREATED"
        - "ACCEPTED"
        - "NON_AUTHORITATIVE_INFORMATION"
        - "NO_CONTENT"
        - "RESET_CONTENT"
        - "PARTIAL_CONTENT"
        - "MULTI_STATUS"
        - "ALREADY_REPORTED"
        - "IM_USED"
        - "MULTIPLE_CHOICES"
        - "MOVED_PERMANENTLY"
        - "FOUND"
        - "MOVED_TEMPORARILY"
        - "SEE_OTHER"
        - "NOT_MODIFIED"
        - "USE_PROXY"
        - "TEMPORARY_REDIRECT"
        - "PERMANENT_REDIRECT"
        - "BAD_REQUEST"
        - "UNAUTHORIZED"
        - "PAYMENT_REQUIRED"
        - "FORBIDDEN"
        - "NOT_FOUND"
        - "METHOD_NOT_ALLOWED"
        - "NOT_ACCEPTABLE"
        - "PROXY_AUTHENTICATION_REQUIRED"
        - "REQUEST_TIMEOUT"
        - "CONFLICT"
        - "GONE"
        - "LENGTH_REQUIRED"
        - "PRECONDITION_FAILED"
        - "PAYLOAD_TOO_LARGE"
        - "REQUEST_ENTITY_TOO_LARGE"
        - "URI_TOO_LONG"
        - "REQUEST_URI_TOO_LONG"
        - "UNSUPPORTED_MEDIA_TYPE"
        - "REQUESTED_RANGE_NOT_SATISFIABLE"
        - "EXPECTATION_FAILED"
        - "I_AM_A_TEAPOT"
        - "INSUFFICIENT_SPACE_ON_RESOURCE"
        - "METHOD_FAILURE"
        - "DESTINATION_LOCKED"
        - "UNPROCESSABLE_ENTITY"
        - "LOCKED"
        - "FAILED_DEPENDENCY"
        - "UPGRADE_REQUIRED"
        - "PRECONDITION_REQUIRED"
        - "TOO_MANY_REQUESTS"
        - "REQUEST_HEADER_FIELDS_TOO_LARGE"
        - "UNAVAILABLE_FOR_LEGAL_REASONS"
        - "INTERNAL_SERVER_ERROR"
        - "NOT_IMPLEMENTED"
        - "BAD_GATEWAY"
        - "SERVICE_UNAVAILABLE"
        - "GATEWAY_TIMEOUT"
        - "HTTP_VERSION_NOT_SUPPORTED"
        - "VARIANT_ALSO_NEGOTIATES"
        - "INSUFFICIENT_STORAGE"
        - "LOOP_DETECTED"
        - "BANDWIDTH_LIMIT_EXCEEDED"
        - "NOT_EXTENDED"
        - "NETWORK_AUTHENTICATION_REQUIRED"
      statusCodeValue:
        type: "integer"
        format: "int32"
  ResponseEntityUserAccessPolicyResponse:
    type: "object"
    properties:
      headers:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      body:
        $ref: "#/definitions/UserAccessPolicyResponse"
      statusCode:
        type: "string"
        enum:
        - "CONTINUE"
        - "SWITCHING_PROTOCOLS"
        - "PROCESSING"
        - "CHECKPOINT"
        - "OK"
        - "CREATED"
        - "ACCEPTED"
        - "NON_AUTHORITATIVE_INFORMATION"
        - "NO_CONTENT"
        - "RESET_CONTENT"
        - "PARTIAL_CONTENT"
        - "MULTI_STATUS"
        - "ALREADY_REPORTED"
        - "IM_USED"
        - "MULTIPLE_CHOICES"
        - "MOVED_PERMANENTLY"
        - "FOUND"
        - "MOVED_TEMPORARILY"
        - "SEE_OTHER"
        - "NOT_MODIFIED"
        - "USE_PROXY"
        - "TEMPORARY_REDIRECT"
        - "PERMANENT_REDIRECT"
        - "BAD_REQUEST"
        - "UNAUTHORIZED"
        - "PAYMENT_REQUIRED"
        - "FORBIDDEN"
        - "NOT_FOUND"
        - "METHOD_NOT_ALLOWED"
        - "NOT_ACCEPTABLE"
        - "PROXY_AUTHENTICATION_REQUIRED"
        - "REQUEST_TIMEOUT"
        - "CONFLICT"
        - "GONE"
        - "LENGTH_REQUIRED"
        - "PRECONDITION_FAILED"
        - "PAYLOAD_TOO_LARGE"
        - "REQUEST_ENTITY_TOO_LARGE"
        - "URI_TOO_LONG"
        - "REQUEST_URI_TOO_LONG"
        - "UNSUPPORTED_MEDIA_TYPE"
        - "REQUESTED_RANGE_NOT_SATISFIABLE"
        - "EXPECTATION_FAILED"
        - "I_AM_A_TEAPOT"
        - "INSUFFICIENT_SPACE_ON_RESOURCE"
        - "METHOD_FAILURE"
        - "DESTINATION_LOCKED"
        - "UNPROCESSABLE_ENTITY"
        - "LOCKED"
        - "FAILED_DEPENDENCY"
        - "UPGRADE_REQUIRED"
        - "PRECONDITION_REQUIRED"
        - "TOO_MANY_REQUESTS"
        - "REQUEST_HEADER_FIELDS_TOO_LARGE"
        - "UNAVAILABLE_FOR_LEGAL_REASONS"
        - "INTERNAL_SERVER_ERROR"
        - "NOT_IMPLEMENTED"
        - "BAD_GATEWAY"
        - "SERVICE_UNAVAILABLE"
        - "GATEWAY_TIMEOUT"
        - "HTTP_VERSION_NOT_SUPPORTED"
        - "VARIANT_ALSO_NEGOTIATES"
        - "INSUFFICIENT_STORAGE"
        - "LOOP_DETECTED"
        - "BANDWIDTH_LIMIT_EXCEEDED"
        - "NOT_EXTENDED"
        - "NETWORK_AUTHENTICATION_REQUIRED"
      statusCodeValue:
        type: "integer"
        format: "int32"
  UserAccessPolicyListResponse:
    type: "object"
    properties:
      totalRecords:
        type: "integer"
        format: "int64"
      totalPages:
        type: "integer"
        format: "int32"
      size:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      sortBy:
        type: "string"
      direction:
        type: "string"
      filter:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/UserAccessPolicyResponse"
  UserAccessPolicyRequest:
    type: "object"
    properties:
      accessPolicyIds:
        type: "array"
        items:
          type: "string"
  UserAccessPolicyResponse:
    type: "object"
    properties:
      userId:
        type: "string"
      userName:
        type: "string"
      accessPolicies:
        $ref: "#/definitions/AccessPolicyListReponse"
