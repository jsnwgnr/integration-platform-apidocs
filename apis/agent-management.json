{
  "swagger" : "2.0",
  "info" : {
    "version" : "3.1.1-SNAPSHOT",
    "title" : "Agents and Devices"
  },
  "host" : "api.dev.actiandatacloud.com",
  "basePath" : "/v2/api",
  "tags" : [ {
    "name" : "Agent"
  }, {
    "name" : "Enterprise Agent"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/agents" : {
      "get" : {
        "tags" : [ "Agent" ],
        "summary" : "List Agents in this Account",
        "description" : "",
        "operationId" : "listAgents",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "Page number (zero based)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortby",
          "in" : "query",
          "description" : "Sort by column name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Sort direction (asc or desc)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter (agent name)",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AgentListResponse"
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Authorization: Bearer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Agent" ],
        "summary" : "Register an Agent",
        "description" : "",
        "operationId" : "registerAgent",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Registered",
            "schema" : {
              "$ref" : "#/definitions/AgentResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ApiErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization: Bearer" : [ ]
        } ]
      }
    },
    "/agents/{id}" : {
      "get" : {
        "tags" : [ "Agent" ],
        "summary" : "Retrieve Agent Info",
        "description" : "",
        "operationId" : "getAgent",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Agent hostname",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AgentResponse"
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Authorization: Bearer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Agent" ],
        "summary" : "Deregister an Agent",
        "description" : "",
        "operationId" : "deregisterAgent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Agent hostname",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deregistered"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Authorization: Bearer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "Agent" ],
        "summary" : "Send Control Message to an Agent",
        "description" : "",
        "operationId" : "sendControlMessage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Agent hostname",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "upgradeType",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ApiErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Authorization: Bearer" : [ ]
        } ]
      }
    },
    "/agents/{id}/deactivate" : {
      "post" : {
        "tags" : [ "Agent" ],
        "summary" : "Deactivate an Agent",
        "description" : "",
        "operationId" : "deactivateAgent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Agent hostname",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Authorization: Bearer" : [ ]
        } ]
      }
    },
    "/agents/{id}/destination" : {
      "delete" : {
        "tags" : [ "Enterprise Agent" ],
        "summary" : "Disable Enterprise Agent",
        "description" : "",
        "operationId" : "removeDestination",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Agent hostname",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "Authorization: Bearer" : [ ]
        } ]
      }
    },
    "/agents/{id}/destination/{destinationId}" : {
      "post" : {
        "tags" : [ "Enterprise Agent" ],
        "summary" : "Enable Enterprise Agent - Set Destination Id",
        "description" : "",
        "operationId" : "setDestination",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Agent hostname",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "destinationId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "Authorization: Bearer" : [ ]
        } ]
      }
    },
    "/agents/{id}/healthcode" : {
      "get" : {
        "tags" : [ "Agent" ],
        "summary" : "Retrieve Agent Health Code",
        "description" : "",
        "operationId" : "agentHealth",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Agent hostname",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "string"
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Authorization: Bearer" : [ ]
        } ]
      }
    },
    "/agents/{id}/license/default" : {
      "get" : {
        "tags" : [ "Agent" ],
        "summary" : "Retrieve Agent License",
        "description" : "",
        "operationId" : "getAgentLicenseInfo",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LicenseInfoResponse"
            }
          }
        },
        "security" : [ {
          "Authorization: Bearer" : [ ]
        } ]
      }
    },
    "/agents/{id}/log" : {
      "get" : {
        "tags" : [ "Agent" ],
        "summary" : "Download Agent Log File",
        "description" : "",
        "operationId" : "getAgentLog",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Agent hostname",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Authorization: Bearer" : [ ]
        } ]
      }
    },
    "/agents/{id}/owner" : {
      "put" : {
        "tags" : [ "Agent" ],
        "summary" : "Assign Agent Ownership",
        "description" : "",
        "operationId" : "changeOwner",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AgentResponse"
            }
          },
          "400" : {
            "description" : "bad request",
            "schema" : {
              "$ref" : "#/definitions/ApiErrorResponse"
            }
          },
          "401" : {
            "description" : "unauthorized"
          }
        },
        "security" : [ {
          "Authorization: Bearer" : [ ]
        } ]
      }
    },
    "/agents/{id}/reactivate" : {
      "post" : {
        "tags" : [ "Agent" ],
        "summary" : "Reactivate an Agent",
        "description" : "",
        "operationId" : "reactivateAgent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Agent hostname",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "Authorization: Bearer" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "Authorization: Bearer" : {
      "description" : "Enter Authorization Header value in the format of 'Bearer [jwt token value]'. See https://datatracker.ietf.org/doc/rfc6750/.",
      "type" : "apiKey",
      "name" : "authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "AgentListResponse" : {
      "type" : "object",
      "properties" : {
        "totalRecords" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sortBy" : {
          "type" : "string"
        },
        "direction" : {
          "type" : "string"
        },
        "filter" : {
          "type" : "string"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AgentResponse"
          }
        }
      }
    },
    "AgentResponse" : {
      "type" : "object",
      "properties" : {
        "deviceId" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "userCode" : {
          "type" : "string"
        },
        "deviceCode" : {
          "type" : "string"
        },
        "clientId" : {
          "type" : "string"
        },
        "clientSecret" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "hostname" : {
          "type" : "string"
        },
        "os" : {
          "type" : "string"
        },
        "ipAddress" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "worker" : {
          "type" : "string"
        },
        "engine" : {
          "type" : "string"
        },
        "dataflow" : {
          "type" : "string"
        },
        "registrationTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastCheckedIn" : {
          "type" : "integer",
          "format" : "int64"
        },
        "healthCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "useSsl" : {
          "type" : "boolean"
        },
        "amqpHost" : {
          "type" : "string"
        },
        "amqpPort" : {
          "type" : "string"
        },
        "amqpUser" : {
          "type" : "string"
        },
        "amqpKey" : {
          "type" : "string"
        },
        "authorizationServer" : {
          "type" : "string"
        },
        "controlServer" : {
          "type" : "string"
        },
        "ownerId" : {
          "type" : "string"
        },
        "owner" : {
          "$ref" : "#/definitions/Reference"
        },
        "isDestinationEligible" : {
          "type" : "boolean"
        },
        "destinationId" : {
          "type" : "string"
        },
        "destination" : {
          "$ref" : "#/definitions/Reference"
        }
      }
    },
    "ApiErrorResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        }
      }
    },
    "FeatureResponse" : {
      "type" : "object",
      "properties" : {
        "featureCode" : {
          "type" : "string"
        },
        "expiration" : {
          "type" : "string"
        }
      }
    },
    "LicenseInfoResponse" : {
      "type" : "object",
      "properties" : {
        "licenseId" : {
          "type" : "string"
        },
        "licenseFile" : {
          "type" : "string"
        },
        "licenseSignatureType" : {
          "type" : "string"
        },
        "licenseStatus" : {
          "type" : "string"
        },
        "features" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FeatureResponse"
          }
        }
      }
    },
    "Reference" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "href" : {
          "type" : "string"
        }
      }
    }
  }
}