{
  "swagger" : "2.0",
  "info" : {
    "version" : "3.1.1-SNAPSHOT",
    "title" : "Job Config Aliasing"
  },
  "host" : "api.im.actiandatacloud.com/v2",
  "tags" : [ {
    "name" : "Alias"
  }, {
    "name" : "Alias Access Control"
  }, {
    "name" : "Alias Firewall"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/jobconfig-aliases" : {
      "get" : {
        "tags" : [ "Alias" ],
        "summary" : "Get a list of job config aliases",
        "description" : "",
        "operationId" : "getAliases",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Page number (zero based)",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Page size",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Sort by column name",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Sort direction (asc or desc)",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Filter (job template name)",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AliasListResponse"
            }
          },
          "401" : {
            "description" : "unauthorized"
          }
        }
      },
      "post" : {
        "tags" : [ "Alias" ],
        "summary" : "Create a job config alias",
        "description" : "created a new job config alias",
        "operationId" : "createAlias",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AliasRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AliasResponse"
            }
          },
          "201" : {
            "description" : "created"
          },
          "400" : {
            "description" : "bad request",
            "schema" : {
              "$ref" : "#/definitions/FieldErrorListResponse"
            }
          },
          "401" : {
            "description" : "unauthorized"
          }
        }
      }
    },
    "/jobconfig-aliases/{id}" : {
      "get" : {
        "tags" : [ "Alias" ],
        "summary" : "Get job config alias",
        "description" : "",
        "operationId" : "getAlias",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AliasResponse"
            }
          },
          "401" : {
            "description" : "unauthorized"
          }
        }
      },
      "put" : {
        "tags" : [ "Alias" ],
        "summary" : "Update job config alias",
        "description" : "",
        "operationId" : "updateAlias",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AliasRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AliasResponse"
            }
          },
          "400" : {
            "description" : "bad request",
            "schema" : {
              "$ref" : "#/definitions/FieldErrorListResponse"
            }
          },
          "401" : {
            "description" : "unauthorized"
          }
        }
      },
      "delete" : {
        "tags" : [ "Alias" ],
        "summary" : "Delete job config alias",
        "description" : "",
        "operationId" : "deleteAlias",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          },
          "401" : {
            "description" : "unauthorized"
          }
        }
      }
    },
    "/jobconfig-aliases/{name}/accesskey" : {
      "get" : {
        "tags" : [ "Alias Access Control" ],
        "summary" : "Get api key for the given alias",
        "description" : "",
        "operationId" : "getAliasApiKey",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AliasAccessKeyResponse"
            }
          },
          "401" : {
            "description" : "unauthorized"
          }
        }
      },
      "post" : {
        "tags" : [ "Alias Access Control" ],
        "summary" : "Generate an api key for the given alias",
        "description" : "generated an api key for the given alias",
        "operationId" : "createAliasApiKey",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "value",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AliasAccessKeyResponse"
            }
          },
          "201" : {
            "description" : "created"
          },
          "401" : {
            "description" : "unauthorized"
          }
        }
      },
      "put" : {
        "tags" : [ "Alias Access Control" ],
        "summary" : "Update an api key for the given alias",
        "description" : "updated an api key for the given alias",
        "operationId" : "updateAliasApiKey",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "value",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AliasAccessKeyResponse"
            }
          },
          "401" : {
            "description" : "unauthorized"
          }
        }
      },
      "delete" : {
        "tags" : [ "Alias Access Control" ],
        "summary" : "Revoke api key for the given alias",
        "description" : "",
        "operationId" : "revokeAliasApiKey",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          },
          "401" : {
            "description" : "unauthorized"
          }
        }
      }
    },
    "/jobconfig-aliases/{name}/allowed-ips" : {
      "get" : {
        "tags" : [ "Alias Firewall" ],
        "summary" : "Get a list of allowed IP addresses for a job config alias",
        "description" : "",
        "operationId" : "getAliasAllowedIps",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Page number (zero based)",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Page size",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Sort by column name",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Sort direction (asc or desc)",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Filter (IP address)",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AliasAllowedIpResponse"
            }
          },
          "401" : {
            "description" : "unauthorized"
          }
        }
      },
      "put" : {
        "tags" : [ "Alias Firewall" ],
        "summary" : "Adds an allowed IP address, or updates the label for an allowed IP address for a job config alias",
        "description" : "created a new allowed IP address",
        "operationId" : "putAliasAllowedIp",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AliasAllowedIpRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResponseEntityObject"
            }
          },
          "201" : {
            "description" : "created",
            "schema" : {
              "$ref" : "#/definitions/AliasAllowedIp"
            }
          },
          "400" : {
            "description" : "bad request"
          },
          "401" : {
            "description" : "unauthorized"
          }
        }
      }
    },
    "/jobconfig-aliases/{name}/allowed-ips/{id}" : {
      "delete" : {
        "tags" : [ "Alias Firewall" ],
        "summary" : "Delete an allowed IP for a job config alias",
        "description" : "",
        "operationId" : "deleteAliasAllowedIp",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResponseEntityObject"
            }
          },
          "204" : {
            "description" : "success"
          },
          "401" : {
            "description" : "unauthorized"
          }
        }
      }
    },
    "/jobconfig-aliases/{name}/secretkey" : {
      "get" : {
        "tags" : [ "Alias Access Control" ],
        "summary" : "Get api secret for the given alias",
        "description" : "",
        "operationId" : "getAliasApiSecret",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AliasSecretKeyResponse"
            }
          },
          "401" : {
            "description" : "unauthorized"
          }
        }
      },
      "post" : {
        "tags" : [ "Alias Access Control" ],
        "summary" : "Generate an api secret key for the given alias",
        "description" : "generated an api secret key for the given alias",
        "operationId" : "createAliasApiSecret",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "value",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AliasSecretKeyResponse"
            }
          },
          "201" : {
            "description" : "created"
          },
          "401" : {
            "description" : "unauthorized"
          }
        }
      },
      "put" : {
        "tags" : [ "Alias Access Control" ],
        "summary" : "Update an api secret key for the given alias",
        "description" : "updated an api secret key for the given alias",
        "operationId" : "updateAliasApiSecret",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "value",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/AliasSecretKeyResponse"
            }
          },
          "401" : {
            "description" : "unauthorized"
          }
        }
      },
      "delete" : {
        "tags" : [ "Alias Access Control" ],
        "summary" : "Revoke api key for the given alias",
        "description" : "",
        "operationId" : "revokeAliasApiSecret",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          },
          "401" : {
            "description" : "unauthorized"
          }
        }
      }
    }
  },
  "definitions" : {
    "AliasAccessKeyResponse" : {
      "type" : "object",
      "properties" : {
        "aliasName" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string"
        }
      }
    },
    "AliasAllowedIp" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "ip" : {
          "type" : "string"
        },
        "label" : {
          "type" : "string"
        },
        "created" : {
          "type" : "integer",
          "format" : "int64"
        },
        "createdById" : {
          "type" : "string"
        },
        "createdByName" : {
          "type" : "string"
        },
        "lastModified" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastModifiedById" : {
          "type" : "string"
        },
        "lastModifiedByName" : {
          "type" : "string"
        }
      }
    },
    "AliasAllowedIpRequest" : {
      "type" : "object",
      "properties" : {
        "ip" : {
          "type" : "string"
        },
        "label" : {
          "type" : "string"
        }
      }
    },
    "AliasAllowedIpResponse" : {
      "type" : "object",
      "properties" : {
        "totalRecords" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sortBy" : {
          "type" : "string"
        },
        "direction" : {
          "type" : "string"
        },
        "filter" : {
          "type" : "string"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AliasAllowedIp"
          }
        },
        "aliasName" : {
          "type" : "string"
        }
      }
    },
    "AliasListResponse" : {
      "type" : "object",
      "properties" : {
        "totalRecords" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sortBy" : {
          "type" : "string"
        },
        "direction" : {
          "type" : "string"
        },
        "filter" : {
          "type" : "string"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AliasResponse"
          }
        }
      }
    },
    "AliasRequest" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 255,
          "pattern" : "^[\\w-_]*$"
        },
        "jobConfigId" : {
          "type" : "string",
          "pattern" : "^[0-9]*$"
        },
        "secure" : {
          "type" : "boolean"
        },
        "allowlist" : {
          "type" : "boolean"
        }
      }
    },
    "AliasResponse" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastModified" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "jobConfigId" : {
          "type" : "string"
        },
        "href" : {
          "type" : "string"
        },
        "secure" : {
          "type" : "boolean"
        },
        "allowlist" : {
          "type" : "boolean"
        },
        "createdByUser" : {
          "$ref" : "#/definitions/Reference"
        },
        "lastModifiedByUser" : {
          "$ref" : "#/definitions/Reference"
        },
        "jobConfig" : {
          "$ref" : "#/definitions/Reference"
        },
        "account" : {
          "$ref" : "#/definitions/Reference"
        }
      }
    },
    "AliasSecretKeyResponse" : {
      "type" : "object",
      "properties" : {
        "aliasName" : {
          "type" : "string"
        },
        "secretKey" : {
          "type" : "string"
        }
      }
    },
    "FieldErrorListResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "errors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FieldErrorResponse"
          }
        }
      }
    },
    "FieldErrorResponse" : {
      "type" : "object",
      "properties" : {
        "field" : {
          "type" : "string"
        },
        "errorMessages" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Reference" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "href" : {
          "type" : "string"
        }
      }
    },
    "ResponseEntity" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "body" : {
          "type" : "object"
        },
        "statusCode" : {
          "type" : "string",
          "enum" : [ "CONTINUE", "SWITCHING_PROTOCOLS", "PROCESSING", "CHECKPOINT", "OK", "CREATED", "ACCEPTED", "NON_AUTHORITATIVE_INFORMATION", "NO_CONTENT", "RESET_CONTENT", "PARTIAL_CONTENT", "MULTI_STATUS", "ALREADY_REPORTED", "IM_USED", "MULTIPLE_CHOICES", "MOVED_PERMANENTLY", "FOUND", "MOVED_TEMPORARILY", "SEE_OTHER", "NOT_MODIFIED", "USE_PROXY", "TEMPORARY_REDIRECT", "PERMANENT_REDIRECT", "BAD_REQUEST", "UNAUTHORIZED", "PAYMENT_REQUIRED", "FORBIDDEN", "NOT_FOUND", "METHOD_NOT_ALLOWED", "NOT_ACCEPTABLE", "PROXY_AUTHENTICATION_REQUIRED", "REQUEST_TIMEOUT", "CONFLICT", "GONE", "LENGTH_REQUIRED", "PRECONDITION_FAILED", "PAYLOAD_TOO_LARGE", "REQUEST_ENTITY_TOO_LARGE", "URI_TOO_LONG", "REQUEST_URI_TOO_LONG", "UNSUPPORTED_MEDIA_TYPE", "REQUESTED_RANGE_NOT_SATISFIABLE", "EXPECTATION_FAILED", "I_AM_A_TEAPOT", "INSUFFICIENT_SPACE_ON_RESOURCE", "METHOD_FAILURE", "DESTINATION_LOCKED", "UNPROCESSABLE_ENTITY", "LOCKED", "FAILED_DEPENDENCY", "UPGRADE_REQUIRED", "PRECONDITION_REQUIRED", "TOO_MANY_REQUESTS", "REQUEST_HEADER_FIELDS_TOO_LARGE", "UNAVAILABLE_FOR_LEGAL_REASONS", "INTERNAL_SERVER_ERROR", "NOT_IMPLEMENTED", "BAD_GATEWAY", "SERVICE_UNAVAILABLE", "GATEWAY_TIMEOUT", "HTTP_VERSION_NOT_SUPPORTED", "VARIANT_ALSO_NEGOTIATES", "INSUFFICIENT_STORAGE", "LOOP_DETECTED", "BANDWIDTH_LIMIT_EXCEEDED", "NOT_EXTENDED", "NETWORK_AUTHENTICATION_REQUIRED" ]
        },
        "statusCodeValue" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ResponseEntityAliasAllowedIpResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "body" : {
          "$ref" : "#/definitions/AliasAllowedIpResponse"
        },
        "statusCode" : {
          "type" : "string",
          "enum" : [ "CONTINUE", "SWITCHING_PROTOCOLS", "PROCESSING", "CHECKPOINT", "OK", "CREATED", "ACCEPTED", "NON_AUTHORITATIVE_INFORMATION", "NO_CONTENT", "RESET_CONTENT", "PARTIAL_CONTENT", "MULTI_STATUS", "ALREADY_REPORTED", "IM_USED", "MULTIPLE_CHOICES", "MOVED_PERMANENTLY", "FOUND", "MOVED_TEMPORARILY", "SEE_OTHER", "NOT_MODIFIED", "USE_PROXY", "TEMPORARY_REDIRECT", "PERMANENT_REDIRECT", "BAD_REQUEST", "UNAUTHORIZED", "PAYMENT_REQUIRED", "FORBIDDEN", "NOT_FOUND", "METHOD_NOT_ALLOWED", "NOT_ACCEPTABLE", "PROXY_AUTHENTICATION_REQUIRED", "REQUEST_TIMEOUT", "CONFLICT", "GONE", "LENGTH_REQUIRED", "PRECONDITION_FAILED", "PAYLOAD_TOO_LARGE", "REQUEST_ENTITY_TOO_LARGE", "URI_TOO_LONG", "REQUEST_URI_TOO_LONG", "UNSUPPORTED_MEDIA_TYPE", "REQUESTED_RANGE_NOT_SATISFIABLE", "EXPECTATION_FAILED", "I_AM_A_TEAPOT", "INSUFFICIENT_SPACE_ON_RESOURCE", "METHOD_FAILURE", "DESTINATION_LOCKED", "UNPROCESSABLE_ENTITY", "LOCKED", "FAILED_DEPENDENCY", "UPGRADE_REQUIRED", "PRECONDITION_REQUIRED", "TOO_MANY_REQUESTS", "REQUEST_HEADER_FIELDS_TOO_LARGE", "UNAVAILABLE_FOR_LEGAL_REASONS", "INTERNAL_SERVER_ERROR", "NOT_IMPLEMENTED", "BAD_GATEWAY", "SERVICE_UNAVAILABLE", "GATEWAY_TIMEOUT", "HTTP_VERSION_NOT_SUPPORTED", "VARIANT_ALSO_NEGOTIATES", "INSUFFICIENT_STORAGE", "LOOP_DETECTED", "BANDWIDTH_LIMIT_EXCEEDED", "NOT_EXTENDED", "NETWORK_AUTHENTICATION_REQUIRED" ]
        },
        "statusCodeValue" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ResponseEntityObject" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "body" : {
          "type" : "object"
        },
        "statusCode" : {
          "type" : "string",
          "enum" : [ "CONTINUE", "SWITCHING_PROTOCOLS", "PROCESSING", "CHECKPOINT", "OK", "CREATED", "ACCEPTED", "NON_AUTHORITATIVE_INFORMATION", "NO_CONTENT", "RESET_CONTENT", "PARTIAL_CONTENT", "MULTI_STATUS", "ALREADY_REPORTED", "IM_USED", "MULTIPLE_CHOICES", "MOVED_PERMANENTLY", "FOUND", "MOVED_TEMPORARILY", "SEE_OTHER", "NOT_MODIFIED", "USE_PROXY", "TEMPORARY_REDIRECT", "PERMANENT_REDIRECT", "BAD_REQUEST", "UNAUTHORIZED", "PAYMENT_REQUIRED", "FORBIDDEN", "NOT_FOUND", "METHOD_NOT_ALLOWED", "NOT_ACCEPTABLE", "PROXY_AUTHENTICATION_REQUIRED", "REQUEST_TIMEOUT", "CONFLICT", "GONE", "LENGTH_REQUIRED", "PRECONDITION_FAILED", "PAYLOAD_TOO_LARGE", "REQUEST_ENTITY_TOO_LARGE", "URI_TOO_LONG", "REQUEST_URI_TOO_LONG", "UNSUPPORTED_MEDIA_TYPE", "REQUESTED_RANGE_NOT_SATISFIABLE", "EXPECTATION_FAILED", "I_AM_A_TEAPOT", "INSUFFICIENT_SPACE_ON_RESOURCE", "METHOD_FAILURE", "DESTINATION_LOCKED", "UNPROCESSABLE_ENTITY", "LOCKED", "FAILED_DEPENDENCY", "UPGRADE_REQUIRED", "PRECONDITION_REQUIRED", "TOO_MANY_REQUESTS", "REQUEST_HEADER_FIELDS_TOO_LARGE", "UNAVAILABLE_FOR_LEGAL_REASONS", "INTERNAL_SERVER_ERROR", "NOT_IMPLEMENTED", "BAD_GATEWAY", "SERVICE_UNAVAILABLE", "GATEWAY_TIMEOUT", "HTTP_VERSION_NOT_SUPPORTED", "VARIANT_ALSO_NEGOTIATES", "INSUFFICIENT_STORAGE", "LOOP_DETECTED", "BANDWIDTH_LIMIT_EXCEEDED", "NOT_EXTENDED", "NETWORK_AUTHENTICATION_REQUIRED" ]
        },
        "statusCodeValue" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    }
  }
}