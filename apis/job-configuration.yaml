---
swagger: "2.0"
info:
  description: "Create, Manage and Schedule Job Configurations."
  version: "3.1.1-SNAPSHOT"
  title: "Job Configuration"
host: "api.im.actiandatacloud.com"
schemes:
- "https"
paths:
  /jobconfigs:
    get:
      summary: "Get a List of Job Configs"
      description: ""
      operationId: "getJobConfigs"
      produces:
      - "application/json"
      parameters:
      - name: "onlyfavs"
        in: "query"
        description: "Show all or only favorite Job Configs"
        required: false
        type: "boolean"
        default: false
      - in: "body"
        name: "body"
        description: "Page number (zero based)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Page size"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort by column name"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort direction (asc or desc)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Filter (job configuration name)"
        required: false
        schema:
          type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/JobConfigListResponse"
        401:
          description: "unauthorized"
    post:
      summary: "Create a new Job Config"
      description: ""
      operationId: "createJobConfig"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/JobConfigRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/JobConfigResponse"
        201:
          description: "created"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
  /jobconfigs/activate:
    patch:
      summary: "Bulk Activation for jobconfig id."
      description: ""
      operationId: "bulkActivateJobConfigs"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "success"
        401:
          description: "unauthorized"
  /jobconfigs/deactivate:
    patch:
      summary: "Bulk De-Activation for jobconfig id."
      description: ""
      operationId: "bulkDeactivateJobConfigs"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "success"
        401:
          description: "unauthorized"
  /jobconfigs/delete:
    delete:
      summary: "Bulk delete for jobconfig id."
      description: ""
      operationId: "bulkDeleteJobConfigs"
      produces:
      - "application/json"
      parameters: []
      responses:
        204:
          description: "success"
        401:
          description: "unauthorized"
  /jobconfigs/package:
    post:
      summary: "Create a new Job Config from a djar package"
      description: "Upload a djar package, set an entrypoint by providing rtc or entrypoint\
        \ to the job config. If no rtc or entrypoint is provided, an entrypoint is\
        \ set by default."
      operationId: "createJobConfigFromPackage"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "Job Configuration name"
        required: true
        type: "string"
      - name: "entrypoint"
        in: "query"
        description: "The entrypoint file in the package"
        required: false
        type: "string"
      - name: "active"
        in: "query"
        description: "Active status"
        required: false
        type: "boolean"
        default: false
      - in: "body"
        name: "body"
        description: "The package upload must be a multipart form with \"file\" as\
          \ the key and the file as the value"
        required: false
        schema:
          $ref: "#/definitions/MultipartFile"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/JobConfigResponse"
        201:
          description: "created"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
  /jobconfigs/{id}:
    get:
      summary: "Get a Job Config"
      description: ""
      operationId: "getJobConfig"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/JobConfigResponse"
        401:
          description: "unathorized"
    put:
      summary: "Update an existing Job Config"
      description: ""
      operationId: "updateJobConfig"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/JobConfigRequest"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/JobConfigResponse"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
    delete:
      summary: "Delete a Job Config"
      description: ""
      operationId: "deleteJobConfig"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        204:
          description: "success"
        401:
          description: "unauthorized"
    patch:
      summary: "Patch an existing Job Config"
      description: ""
      operationId: "patchJobConfig"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/JobConfigRequest"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/JobConfigResponse"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
  /jobconfigs/{id}/clone:
    post:
      summary: "Clone a Job Config"
      description: ""
      operationId: "cloneJobConfig"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - name: "name"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/JobConfigResponse"
        201:
          description: "created"
        400:
          description: "unauthorized"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
  /jobconfigs/{id}/favorites:
    post:
      summary: "Sets the job config as a user favorite."
      description: ""
      operationId: "createJobConfigFavorite"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/FavoriteResponse"
        201:
          description: "created"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
    delete:
      summary: "Unsets the job config as a user favorite"
      description: ""
      operationId: "deleteJobConfigFavorite"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        204:
          description: "success"
        401:
          description: "unauthorized"
  /jobconfigs/{id}/files:
    get:
      summary: "List the Files on the Job Config"
      description: ""
      operationId: "listJobConfigFiles"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Page number (zero based)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Page size"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort by column name"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort direction (asc or desc)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Filter (file name)"
        required: false
        schema:
          type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/FileListResponse"
        401:
          description: "unauthorized"
    post:
      summary: "Create a new File on the Job Config"
      description: "Request body contents will be saved to the file contents. "
      operationId: "createJobConfigFile"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Job Configuration Id"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "file name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "file content"
        required: false
        schema:
          $ref: "#/definitions/MultipartFile"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/FileResponse"
        201:
          description: "created"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
  /jobconfigs/{id}/files/entrypoints/{key+}:
    get:
      summary: "Retrieve the Entry Points defined inside ANY package attached to a\
        \ Job Template"
      description: ""
      operationId: "getJobConfigFileEntryPoints"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - name: "key"
        in: "path"
        description: "Name of the file."
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/EntryPoints"
        401:
          description: "unauthorized"
        404:
          description: "not found"
  /jobconfigs/{id}/files/{key}:
    get:
      summary: "Retrieve a Job Config File"
      description: ""
      operationId: "getJobConfigFile"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - name: "key"
        in: "path"
        description: "file name"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
        401:
          description: "unauthorized"
    put:
      summary: "Update a Job Config File"
      description: "Request body contents will be saved to the file contents. "
      operationId: "updateJobConfigFile"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Job Configuration Id"
        required: true
        type: "string"
      - name: "key"
        in: "path"
        description: "file name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "To upload the package use \"file\" as the key and the file as\
          \ the value."
        required: false
        schema:
          $ref: "#/definitions/MultipartFile"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/FileResponse"
        401:
          description: "unauthorized"
    delete:
      summary: "Delete a Job Config File"
      description: ""
      operationId: "deleteJobConfigFile"
      parameters:
      - name: "id"
        in: "path"
        description: "Job Configuration Id"
        required: true
        type: "string"
      - name: "key"
        in: "path"
        description: "file name"
        required: true
        type: "string"
      responses:
        204:
          description: "success"
        401:
          description: "unauthorized"
  /jobconfigs/{id}/macrodef:
    post:
      summary: "Import distinct Macros from MacroDef file to Job Config"
      description: "Macro value is only returned if the macro is not marked as secure.\
        \ Secure macros can only be updated if update is secure."
      operationId: "importJobConfigMacroDef"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/MultipartFile"
      - in: "body"
        name: "body"
        description: "Page number (zero based)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Page size"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort by column name"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort direction (asc or desc)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Filter (macro name)"
        required: false
        schema:
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/MacroListResponse"
        201:
          description: "created"
        400:
          description: "bad request"
        401:
          description: "unauthorized"
        500:
          description: "server exception"
  /jobconfigs/{id}/macros:
    get:
      summary: "List the Macros on the Job Config"
      description: "Macro value is only returned if the macro is not marked as secure. "
      operationId: "listJobConfigMacros"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Page number (zero based)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Page size"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort by column name"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort direction (asc or desc)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Filter (macro name)"
        required: false
        schema:
          type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/MacroListResponse"
        401:
          description: "unauthorized"
    post:
      summary: "Create a Job Config Macro"
      description: "Macro value is only returned if the macro is not marked as secure.\
        \ Secure macros can only be updated if update is secure."
      operationId: "createJobConfigMacro"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Macro"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/MacroResponse"
        201:
          description: "created"
        401:
          description: "unauthorized"
  /jobconfigs/{id}/macros/{name}:
    get:
      summary: "Get a Job Config Macro"
      description: "Macro value is only returned if the macro is not marked as secure. "
      operationId: "getJobConfigMacro"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - name: "name"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/MacroResponse"
        401:
          description: "unauthorized"
    put:
      summary: "Update a Job Config Macro"
      description: "Macro value is only returned if the macro is not marked as secure.\
        \ Secure macros can only be updated if update is secure."
      operationId: "updateJobConfigMacro"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - name: "name"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Macro"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/MacroResponse"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
    delete:
      summary: "Delete a Job Config Macro"
      description: ""
      operationId: "deleteJobConfigMacro"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - name: "name"
        in: "path"
        required: true
        type: "string"
      responses:
        204:
          description: "success"
        401:
          description: "unauthorized"
  /jobconfigs/{id}/owner:
    put:
      summary: "Assigns new owner to the Config"
      description: ""
      operationId: "updateJobConfigOwner"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The Config Id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Owner"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/JobConfigResponse"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
  /jobconfigs/{id}/package/entrypoints:
    get:
      summary: "Retrieve the Entry Points defined inside the SELECTED package on a\
        \ Job Template"
      description: ""
      operationId: "getJobConfigEntryPoints"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/EntryPoints"
        401:
          description: "unauthorized"
    head:
      summary: "Retrieve the Entry Points defined inside the SELECTED package on a\
        \ Job Config"
      description: ""
      operationId: "checkJobConfigEntryPoints"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
        401:
          description: "unauthorized"
        404:
          description: "not found"
  /jobconfigs/{id}/schedules:
    get:
      summary: "Retrieve a list of schedules associated with a jobconfig"
      description: ""
      operationId: "listSchedules"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Resource id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Page number (zero based)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Page size"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort by column name"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort direction (asc or desc)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Filter (user name)"
        required: false
        schema:
          type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer [access_token]"
        required: true
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/ScheduleResponseList"
        401:
          description: "unauthorized"
    post:
      summary: "Create a jobconfig schedule"
      description: ""
      operationId: "createSchedule"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Resource id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "ScheduleRequest"
        required: true
        schema:
          $ref: "#/definitions/ScheduleRequest"
      - name: "Authorization"
        in: "header"
        description: "Bearer [access_token]"
        required: true
      responses:
        200:
          description: "created"
          schema:
            $ref: "#/definitions/ScheduleResponse"
        201:
          description: "created"
          schema:
            $ref: "#/definitions/ScheduleResponse"
        401:
          description: "unauthorized"
        409:
          description: "conflict"
  /jobconfigs/{id}/schedules/{name}:
    put:
      summary: "Update a jobconfig schedule"
      description: ""
      operationId: "updateSchedule"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Resource id"
        required: true
        type: "string"
      - name: "name"
        in: "path"
        description: "Schedule key"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "ScheduleRequest"
        required: true
        schema:
          $ref: "#/definitions/ScheduleRequest"
      - name: "Authorization"
        in: "header"
        description: "Bearer [access_token]"
        required: true
      responses:
        200:
          description: "updated"
          schema:
            $ref: "#/definitions/ScheduleResponse"
        401:
          description: "unauthorized"
        404:
          description: "not found"
  /jobconfigs/{id}/schedules/{scheduleKey}:
    get:
      summary: "Retrieve a jobconfig schedule by schedule key"
      description: ""
      operationId: "getSchedule"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Resource id"
        required: true
        type: "string"
      - name: "scheduleKey"
        in: "path"
        description: "Schedule key"
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer [access_token]"
        required: true
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/ScheduleResponse"
        401:
          description: "unauthorized"
        404:
          description: "not found"
    delete:
      summary: "Delete a jobconfig schedule"
      description: ""
      operationId: "deleteSchedule"
      parameters:
      - name: "id"
        in: "path"
        description: "Resource id"
        required: true
        type: "string"
      - name: "scheduleKey"
        in: "path"
        description: "Schedule key"
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer [access_token]"
        required: true
      responses:
        200:
          description: "deleted"
          schema:
            $ref: "#/definitions/ResponseEntityObject"
        204:
          description: "deleted"
        401:
          description: "unauthorized"
        404:
          description: "not found"
  /jobconfigs/{id}/subscription:
    post:
      summary: "Create a subscription to a job config"
      description: ""
      operationId: "createSubscriptionToJobConfig"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SubscriptionRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SubscriptionResponse"
        201:
          description: "created"
        401:
          description: "unauthorized"
  /jobtemplates:
    get:
      summary: "Get a list of Job Templates"
      description: ""
      operationId: "getJobTemplates"
      produces:
      - "application/json"
      parameters:
      - name: "onlyfavs"
        in: "query"
        description: "Show all or only favorite Job Templates"
        required: false
        type: "boolean"
        default: false
      - in: "body"
        name: "body"
        description: "Page number (zero based)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Page size"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort by column name"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort direction (asc or desc)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Filter (job template name)"
        required: false
        schema:
          type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/JobTemplateListResponse"
        401:
          description: "unauthorized"
    post:
      summary: "Create a Job Template"
      description: ""
      operationId: "createJobTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/JobTemplateRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/JobTemplateResponse"
        201:
          description: "created"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
  /jobtemplates/package:
    post:
      summary: "Create a new Job Template from a djar package"
      description: "Upload a djar package, set an entrypoint by providing rtc or entrypoint\
        \ to the job template. If no rtc or entrypoint is provided, an entrypoint\
        \ is set by default."
      operationId: "createJobTemplateFromPackage"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "Job Template name"
        required: true
        type: "string"
      - name: "entrypoint"
        in: "query"
        description: "The entrypoint file in the package"
        required: false
        type: "string"
      - name: "active"
        in: "query"
        description: "Active status"
        required: false
        type: "boolean"
        default: false
      - in: "body"
        name: "body"
        description: "The package upload must be a multipart form with \\\"file\\\"\
          \ as the key and the file as the value"
        required: false
        schema:
          $ref: "#/definitions/MultipartFile"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/JobTemplateResponse"
        201:
          description: "created"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
  /jobtemplates/{id}:
    get:
      summary: "Get a Job Template"
      description: ""
      operationId: "getJobTemplate"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/JobTemplateResponse"
        401:
          description: "unathorized"
    put:
      summary: "Update a job Template"
      description: ""
      operationId: "updateJobTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/JobTemplateRequest"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/JobTemplateResponse"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
    delete:
      summary: "Delete a Job Template"
      description: ""
      operationId: "deleteJobTemplate"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - name: "cascade"
        in: "query"
        required: false
        type: "boolean"
      responses:
        204:
          description: "success"
        401:
          description: "unauthorized"
    patch:
      summary: "Patch a job Template"
      description: ""
      operationId: "patchJobTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/JobTemplateRequest"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/JobTemplateResponse"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
  /jobtemplates/{id}/clone:
    post:
      summary: "Clone a Job Template"
      description: ""
      operationId: "cloneJobTemplate"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - name: "name"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/JobTemplateResponse"
        201:
          description: "created"
        401:
          description: "unauthorized"
  /jobtemplates/{id}/favorites:
    post:
      summary: "Sets the job template as a user favorite."
      description: ""
      operationId: "createJobTemplateFavorite"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/FavoriteResponse"
        201:
          description: "created"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
    delete:
      summary: "Unsets the job template as a user favorite"
      description: ""
      operationId: "deleteJobTemplateFavorite"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        204:
          description: "success"
        401:
          description: "unauthorized"
  /jobtemplates/{id}/files:
    get:
      summary: "Get a List of Job Template Files"
      description: ""
      operationId: "listJobTemplateFiles"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Job template id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Page number (zero based)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Page size"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort by column name"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort direction (asc or desc)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Filter (access policy name)"
        required: false
        schema:
          type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/FileListResponse"
        401:
          description: "unauthorized"
    post:
      summary: "Create a new Job Template File"
      description: "Request body contents will be saved to the file contents. "
      operationId: "createJobTemplateFile"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Job Template id"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "file name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "To upload the package use \"file\" as the key and the file as\
          \ the value."
        required: false
        schema:
          $ref: "#/definitions/MultipartFile"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/FileResponse"
        201:
          description: "created"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
  /jobtemplates/{id}/files/entrypoints/{key+}:
    get:
      summary: "Retrieve the Entry Points defined inside ANY package attached to a\
        \ Job Template"
      description: ""
      operationId: "getJobTemplateFileEntryPoints"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - name: "key"
        in: "path"
        description: "Name of the file."
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/EntryPoints"
        401:
          description: "unauthorized"
        404:
          description: "not found"
  /jobtemplates/{id}/files/{key}:
    get:
      summary: "Get a Job Template File"
      description: ""
      operationId: "getJobTemplateFile"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "id"
        in: "path"
        description: "Job Template id"
        required: true
        type: "string"
      - name: "key"
        in: "path"
        description: "file name"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
        401:
          description: "unauthorized"
    put:
      summary: "Update a Job Template File"
      description: "Request body contents will be saved to the file contents. "
      operationId: "updateJobTemplateFile"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Job Template id"
        required: true
        type: "string"
      - name: "key"
        in: "path"
        description: "file name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "To upload the package use \"file\" as the key and the file as\
          \ the value."
        required: false
        schema:
          $ref: "#/definitions/MultipartFile"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/FileResponse"
        401:
          description: "unauthorized"
    delete:
      summary: "Delete a Job Template File"
      description: ""
      operationId: "deleteJobTemplateFile"
      parameters:
      - name: "id"
        in: "path"
        description: "Job Template id"
        required: true
        type: "string"
      - name: "key"
        in: "path"
        description: "file name"
        required: true
        type: "string"
      responses:
        204:
          description: "success"
        401:
          description: "unauthorized"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
  /jobtemplates/{id}/jobconfigs:
    get:
      summary: "List the Job Configs on the Job Template"
      description: ""
      operationId: "getJobTemplateJobConfigs"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Page number (zero based)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Page size"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort by column name"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort direction (asc or desc)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Filter (job config name)"
        required: false
        schema:
          type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/JobConfigListResponse"
        401:
          description: "unauthorized"
    post:
      summary: "Create a Job Config on a Job Template"
      description: ""
      operationId: "createJobTemplateJobConfig"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/JobConfigRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/JobConfigResponse"
        201:
          description: "created"
        401:
          description: "unauthorized"
  /jobtemplates/{id}/jobconfigs/package:
    post:
      summary: "Create a new Job Config from a djar package"
      description: "Upload a djar package, set an entrypoint by providing rtc or entrypoint\
        \ to the job config. If no rtc or entrypoint is provided, an entrypoint is\
        \ set by default."
      operationId: "createJobTemplateJobConfigFromPackage"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Job Template Id"
        required: true
        type: "string"
      - name: "name"
        in: "query"
        description: "Job Configuration name"
        required: true
        type: "string"
      - name: "entrypoint"
        in: "query"
        description: "The entrypoint file in the package"
        required: false
        type: "string"
      - name: "active"
        in: "query"
        description: "Active status"
        required: false
        type: "boolean"
        default: false
      - in: "body"
        name: "body"
        description: "The package upload must be a multipart form with \"file\" as\
          \ the key and the file as the value"
        required: false
        schema:
          $ref: "#/definitions/MultipartFile"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/JobConfigResponse"
        201:
          description: "created"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
  /jobtemplates/{id}/macrodef:
    post:
      summary: "Import distinct Macros from MacroDef file to Job Template"
      description: "Macro value is only returned if the macro is not marked as secure. "
      operationId: "importJobTemplateMacroDef"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/MultipartFile"
      - in: "body"
        name: "body"
        description: "Page number (zero based)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Page size"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort by column name"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort direction (asc or desc)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Filter (macro name)"
        required: false
        schema:
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/MacroListResponse"
        201:
          description: "created"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
        500:
          description: "server exception"
  /jobtemplates/{id}/macros:
    get:
      summary: "List the Macros on the Job Template"
      description: "Macro value is only returned if the macro is not marked as secure. "
      operationId: "listJobTemplateMacros"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Page number (zero based)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Page size"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort by column name"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Sort direction (asc or desc)"
        required: false
        schema:
          type: "string"
      - in: "body"
        name: "body"
        description: "Filter (macro name)"
        required: false
        schema:
          type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/MacroListResponse"
        401:
          description: "unauthorized"
    post:
      summary: "Create a Macro on the Job Template"
      description: "Macro value is only returned if the macro is not marked as secure. "
      operationId: "createJobTemplateMacro"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Macro"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/MacroResponse"
        201:
          description: "created"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
  /jobtemplates/{id}/macros/{name}:
    get:
      summary: "Get a Macro from the Job Template"
      description: "Macro value is only returned if the macro is not marked as secure. "
      operationId: "getJobTemplateMacro"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - name: "name"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/MacroResponse"
        401:
          description: "unauthorized"
    put:
      summary: "Update a Macro on the Job Template"
      description: "Macro value is only returned if the macro is not marked as secure.\
        \ Secure macros can only be updated if update is secure."
      operationId: "updateJobTemplateMacro"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - name: "name"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Macro"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/MacroResponse"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
    delete:
      summary: "Delete a Macro on a Job Template"
      description: ""
      operationId: "deleteJobTemplateMacro"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - name: "name"
        in: "path"
        required: true
        type: "string"
      responses:
        204:
          description: "success"
        401:
          description: "unauthorized"
  /jobtemplates/{id}/owner:
    put:
      summary: "Assigns new owner to the Template"
      description: ""
      operationId: "updateJobTemplateOwner"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Job Template Id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Owner"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/JobTemplateResponse"
        400:
          description: "bad request"
          schema:
            $ref: "#/definitions/ApiErrorResponse"
        401:
          description: "unauthorized"
  /jobtemplates/{id}/package/entrypoints:
    get:
      summary: "Retrieve the Entry Points defined inside the SELECTED package on a\
        \ Job Template"
      description: ""
      operationId: "getJobTemplateEntryPoints"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/EntryPoints"
        401:
          description: "unauthorized"
    head:
      summary: "Retrieve the Entry Points defined inside the SELECTED package on a\
        \ Job Template"
      description: ""
      operationId: "checkJobTemplateEntryPoints"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
        401:
          description: "unauthorized"
        404:
          description: "not found"
definitions:
  ApiErrorResponse:
    type: "object"
    properties:
      message:
        type: "string"
  EntryPoints:
    type: "object"
    properties:
      packageName:
        type: "string"
      entryPoints:
        type: "array"
        items:
          type: "string"
  FavoriteResponse:
    type: "object"
    properties:
      resourceId:
        type: "string"
      resourceType:
        type: "string"
      user:
        $ref: "#/definitions/Reference"
  FileListResponse:
    type: "object"
    properties:
      totalRecords:
        type: "integer"
        format: "int64"
      totalPages:
        type: "integer"
        format: "int32"
      size:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      sortBy:
        type: "string"
      direction:
        type: "string"
      filter:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/FileResponse"
  FileMetaData:
    type: "object"
    properties:
      size:
        type: "integer"
        format: "int64"
      lastModified:
        type: "string"
        format: "date-time"
      entityType:
        type: "string"
        enum:
        - "ACCOUNT"
        - "GROUP"
        - "USER"
        - "PROVISIONING"
        - "LICENSE"
        - "JOBTEMPLATE"
        - "JOBCONFIG"
        - "JOB"
        - "OUTPUT"
        - "TEMP"
        - "AGENT"
        - "NONE"
      entityId:
        type: "string"
      linkType:
        type: "string"
        enum:
        - "LINK"
        - "INHERITED"
        - "LOCAL"
      linkId:
        type: "integer"
        format: "int64"
  FileResponse:
    type: "object"
    properties:
      name:
        type: "string"
      href:
        type: "string"
      metadata:
        $ref: "#/definitions/FileMetaData"
      linkId:
        type: "string"
  InputStream:
    type: "object"
  JobConfigListResponse:
    type: "object"
    properties:
      totalRecords:
        type: "integer"
        format: "int64"
      totalPages:
        type: "integer"
        format: "int32"
      size:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      sortBy:
        type: "string"
      direction:
        type: "string"
      filter:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/JobConfigResponse"
  JobConfigRequest:
    type: "object"
    properties:
      name:
        type: "string"
      active:
        type: "boolean"
      blocking:
        type: "boolean"
      runtimeConfig:
        $ref: "#/definitions/RuntimeConfig"
      schedule:
        type: "string"
      timeout:
        type: "integer"
        format: "int32"
      jobTemplateId:
        type: "string"
      destinationId:
        type: "string"
      description:
        type: "string"
  JobConfigResponse:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      href:
        type: "string"
      active:
        type: "boolean"
      blocking:
        type: "boolean"
      favorite:
        type: "boolean"
      remote:
        type: "boolean"
      schedule:
        type: "string"
      nextFireTime:
        type: "string"
        format: "date-time"
      timeout:
        type: "integer"
        format: "int32"
      runtimeConfig:
        $ref: "#/definitions/RuntimeConfig"
      template:
        $ref: "#/definitions/Reference"
      destination:
        $ref: "#/definitions/Reference"
      user:
        $ref: "#/definitions/Reference"
      description:
        type: "string"
      created:
        type: "string"
        format: "date-time"
      createdByUser:
        $ref: "#/definitions/Reference"
      lastModified:
        type: "string"
        format: "date-time"
      lastModifiedByUser:
        $ref: "#/definitions/Reference"
  JobTemplateListResponse:
    type: "object"
    properties:
      totalRecords:
        type: "integer"
        format: "int64"
      totalPages:
        type: "integer"
        format: "int32"
      size:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      sortBy:
        type: "string"
      direction:
        type: "string"
      filter:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/JobTemplateResponse"
  JobTemplateRequest:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      engine:
        type: "string"
      runtimeConfig:
        $ref: "#/definitions/RuntimeConfig"
      active:
        type: "boolean"
      remote:
        type: "boolean"
      destinationId:
        type: "string"
  JobTemplateResponse:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      href:
        type: "string"
      description:
        type: "string"
      engine:
        type: "string"
      runtimeConfig:
        $ref: "#/definitions/RuntimeConfig"
      created:
        type: "string"
        format: "date-time"
      lastModified:
        type: "string"
        format: "date-time"
      active:
        type: "boolean"
      favorite:
        type: "boolean"
      remote:
        type: "boolean"
      destination:
        $ref: "#/definitions/Reference"
      user:
        $ref: "#/definitions/Reference"
      createdByUser:
        $ref: "#/definitions/Reference"
      lastModifiedByUser:
        $ref: "#/definitions/Reference"
  Macro:
    type: "object"
    properties:
      key:
        type: "string"
      value:
        type: "string"
      secure:
        type: "boolean"
      description:
        type: "string"
  MacroListResponse:
    type: "object"
    properties:
      totalRecords:
        type: "integer"
        format: "int64"
      totalPages:
        type: "integer"
        format: "int32"
      size:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      sortBy:
        type: "string"
      direction:
        type: "string"
      filter:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/MacroResponse"
  MacroResponse:
    type: "object"
    properties:
      name:
        type: "string"
      value:
        type: "string"
      secure:
        type: "boolean"
      description:
        type: "string"
      created:
        type: "string"
        format: "date-time"
      lastModified:
        type: "string"
        format: "date-time"
  MultipartFile:
    type: "object"
    properties:
      name:
        type: "string"
      empty:
        type: "boolean"
      bytes:
        type: "array"
        items:
          type: "string"
          format: "byte"
      size:
        type: "integer"
        format: "int64"
      inputStream:
        $ref: "#/definitions/InputStream"
      contentType:
        type: "string"
      originalFilename:
        type: "string"
  Owner:
    type: "object"
    properties:
      id:
        type: "string"
  Property:
    type: "object"
    properties:
      key:
        type: "string"
      value:
        type: "string"
  Reference:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      href:
        type: "string"
  RuntimeConfig:
    type: "object"
    properties:
      packageName:
        type: "string"
      entryPoint:
        type: "string"
      logLevel:
        type: "string"
      packageArtifactOverride:
        type: "boolean"
      packagePrefix:
        type: "string"
      macros:
        type: "array"
        items:
          $ref: "#/definitions/Macro"
      inMessages:
        type: "array"
        items:
          $ref: "#/definitions/TextMessage"
      outMessageNames:
        type: "array"
        items:
          type: "string"
  ScheduleRequest:
    type: "object"
    properties:
      name:
        type: "string"
      type:
        type: "string"
        enum:
        - "cron"
        - "interval"
      cronSchedule:
        type: "string"
      intervalFrequency:
        type: "string"
      description:
        type: "string"
      timeZone:
        type: "string"
      webhookConfig:
        $ref: "#/definitions/WebhookConfig"
  ScheduleResponse:
    type: "object"
    properties:
      name:
        type: "string"
      type:
        type: "string"
      cronSchedule:
        type: "string"
      intervalFrequency:
        type: "string"
      description:
        type: "string"
      timeZone:
        type: "string"
      resourceId:
        type: "string"
      resourceType:
        type: "string"
      webhookConfig:
        $ref: "#/definitions/WebhookConfig"
  ScheduleResponseList:
    type: "object"
    properties:
      totalRecords:
        type: "integer"
        format: "int64"
      totalPages:
        type: "integer"
        format: "int32"
      size:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      sortBy:
        type: "string"
      direction:
        type: "string"
      filter:
        type: "string"
      items:
        type: "array"
        items:
          $ref: "#/definitions/ScheduleResponse"
  WebhookConfig:
    type: "object"
    properties:
      method:
        type: "string"
      endpoint:
        type: "string"
      payload:
        type: "string"
      headers:
        type: "object"
        additionalProperties:
          type: "string"
  SubscriptionRequest:
    type: "object"
    properties:
      jobConfig:
        $ref: "#/definitions/Reference"
      active:
        type: "boolean"
      recipients:
        type: "array"
        items:
          type: "string"
  SubscriptionResponse:
    type: "object"
    properties:
      id:
        type: "string"
      active:
        type: "boolean"
      created:
        type: "string"
        format: "date-time"
      recipients:
        type: "array"
        items:
          type: "string"
      jobConfig:
        $ref: "#/definitions/Reference"
      user:
        $ref: "#/definitions/Reference"
      createdBy:
        $ref: "#/definitions/Reference"
  TextMessage:
    type: "object"
    properties:
      name:
        type: "string"
      body:
        type: "string"
      properties:
        type: "array"
        items:
          $ref: "#/definitions/Property"
      href:
        type: "string"
